"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[31080],{72542:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var i=n(87462),o=(n(67294),n(3905));const l={sidebar_position:1},a="Deploy Multi-Cloud Applications",r={unversionedId:"tutorials/deploy-multi-cloud-application",id:"tutorials/deploy-multi-cloud-application",title:"Deploy Multi-Cloud Applications",description:"This tutorial explains how to deploy multi-cloud applications using resource definitions to abstract away complex configurations.",source:"@site/docs/tutorials/deploy-multi-cloud-application.md",sourceDirName:"tutorials",slug:"/tutorials/deploy-multi-cloud-application",permalink:"/docs/tutorials/deploy-multi-cloud-application",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/docs/tutorials/deploy-multi-cloud-application.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Tutorials",permalink:"/docs/category/tutorials"},next:{title:"Deploy llama-2 on AWS",permalink:"/docs/tutorials/llama2-on-aws"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Connector Configuration",id:"connector-configuration",level:3},{value:"Environment Setup",id:"environment-setup",level:3},{value:"Download Walrus CLI",id:"download-walrus-cli",level:3},{value:"Deploy Multi-Cloud Applications",id:"deploy-multi-cloud-applications-1",level:2},{value:"Create Resource Definitions",id:"create-resource-definitions",level:3},{value:"Deploy Multi-Cloud Applications",id:"deploy-multi-cloud-applications-2",level:3},{value:"Deploy Multi-Cloud Applications via Walrus File",id:"deploy-multi-cloud-applications-via-walrus-file",level:3}],d={toc:c};function p(e){let{components:t,...l}=e;return(0,o.kt)("wrapper",(0,i.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy-multi-cloud-applications"},"Deploy Multi-Cloud Applications"),(0,o.kt)("p",null,"This tutorial explains how to deploy multi-cloud applications using resource definitions to abstract away complex configurations."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Before getting started, make sure to prepare the necessary resources and complete the following configuration tasks."),(0,o.kt)("h3",{id:"connector-configuration"},"Connector Configuration"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Navigate to the ",(0,o.kt)("inlineCode",{parentName:"li"},"default")," project > ",(0,o.kt)("inlineCode",{parentName:"li"},"Connectors")," > Click ",(0,o.kt)("inlineCode",{parentName:"li"},"New Connector"),", choose the connector type as ",(0,o.kt)("inlineCode",{parentName:"li"},"Cloud Provider"),', enter the name "alibaba", select the environment type as ',(0,o.kt)("inlineCode",{parentName:"li"},"Production"),", and choose ",(0,o.kt)("inlineCode",{parentName:"li"},"Alibaba")," as the type. Enter other required information to complete the configuration."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("inlineCode",{parentName:"li"},"New Connector"),' again, enter the name "aws", select the environment type as ',(0,o.kt)("inlineCode",{parentName:"li"},"Production"),", and choose ",(0,o.kt)("inlineCode",{parentName:"li"},"AWS")," as the type. Enter other required information to complete the configuration.")),(0,o.kt)("h3",{id:"environment-setup"},"Environment Setup"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Navigate to the ",(0,o.kt)("inlineCode",{parentName:"li"},"default")," project > ",(0,o.kt)("inlineCode",{parentName:"li"},"Environments")," > Click ",(0,o.kt)("inlineCode",{parentName:"li"},"New Environment"),', enter the name "production", associate it with the connector named "alibaba" created earlier for production deployment.'),(0,o.kt)("li",{parentName:"ol"},'Create another environment named "dr", associate it with the connector named "aws" created earlier for cloud disaster recovery (DR) purposes.'),(0,o.kt)("li",{parentName:"ol"},"Include the ",(0,o.kt)("inlineCode",{parentName:"li"},"local")," environment provided by default in the ",(0,o.kt)("inlineCode",{parentName:"li"},"default")," project. Now we have a total of three environments: ",(0,o.kt)("inlineCode",{parentName:"li"},"local"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"production"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"dr"),".")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"environment-list",src:n(4413).Z,width:"3012",height:"1636"})),(0,o.kt)("h3",{id:"download-walrus-cli"},"Download Walrus CLI"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install ",(0,o.kt)("a",{parentName:"li",href:"/cli"},"Walrus CLI")," according to the documentation.")),(0,o.kt)("h2",{id:"deploy-multi-cloud-applications-1"},"Deploy Multi-Cloud Applications"),(0,o.kt)("h3",{id:"create-resource-definitions"},"Create Resource Definitions"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Click on ",(0,o.kt)("inlineCode",{parentName:"li"},"Operations")," in the left navigation bar."),(0,o.kt)("li",{parentName:"ol"},"Go to the ",(0,o.kt)("inlineCode",{parentName:"li"},"Resource Definitions")," tab, click on ",(0,o.kt)("inlineCode",{parentName:"li"},"New Resource Definition"),', enter the resource definition name "demo-mysql", and select the type "demo-mysql".'),(0,o.kt)("li",{parentName:"ol"},'Create a matching rule named "dev" to represent the development environment. Add a selector, choose the environment name, and enter "local" as the name. Use the latest version of the template ',(0,o.kt)("inlineCode",{parentName:"li"},"builtin/kubernetes-mysql"),", and allocate CPU and memory resources in the predefined configuration section."),(0,o.kt)("li",{parentName:"ol"},'Create another matching rule named "production" for the production environment. Add a selector, choose the environment name, and enter "production". Use the latest version of the template ',(0,o.kt)("inlineCode",{parentName:"li"},"builtin/alicloud-rds-mysql")," and configure the ",(0,o.kt)("inlineCode",{parentName:"li"},"Vpc Id")," in the predefined configuration section. This eliminates the need for users to input the ",(0,o.kt)("inlineCode",{parentName:"li"},"Vpc Id")," when creating resources using this definition."),(0,o.kt)("li",{parentName:"ol"},'Create a matching rule named "dr" for the disaster recovery environment. Add a selector, choose the environment name, and enter "dr". Use the latest version of the template ',(0,o.kt)("inlineCode",{parentName:"li"},"builtin/aws-rds-mysql")," and configure the ",(0,o.kt)("inlineCode",{parentName:"li"},"Vpc Id")," in the predefined configuration section.")),(0,o.kt)("p",null,"Once configured, the resource definition includes the following matching rules."),(0,o.kt)("p",null,"Resource definition rule one."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resource-definition-rule1",src:n(85570).Z,width:"3024",height:"3364"})),(0,o.kt)("p",null,"Resource definition rule two."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resource-definition-rule2",src:n(20170).Z,width:"3018",height:"1636"})),(0,o.kt)("p",null,"Resource definition rule three."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resource-definition-rule3",src:n(1338).Z,width:"3022",height:"1636"})),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},"Customize UI styling configurations. After configuring matching rules, Walrus intelligently renders UI styles based on the configuration. Administrators can customize UI styles as needed."),(0,o.kt)("li",{parentName:"ol"},'Go to the resource definition "demo-mysql" > ',(0,o.kt)("inlineCode",{parentName:"li"},"UI Schema")," tab, click ",(0,o.kt)("inlineCode",{parentName:"li"},"Preview")," to see the automatically generated UI style. Click ",(0,o.kt)("inlineCode",{parentName:"li"},"Edit"),", here we remove some complex configurations (",(0,o.kt)("inlineCode",{parentName:"li"},"replication_readonly_replicas"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"storage"),") and leave common configurations to support quick deployment. ")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resource-definition-ui-schema-edit",src:n(33370).Z,width:"3022",height:"1634"})),(0,o.kt)("ol",{start:8},(0,o.kt)("li",{parentName:"ol"},"Below are the completed UI styles after configuration.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resource-definition-ui-schema-preview",src:n(9447).Z,width:"3020",height:"1640"})),(0,o.kt)("h3",{id:"deploy-multi-cloud-applications-2"},"Deploy Multi-Cloud Applications"),(0,o.kt)("p",null,"With the configured resource definitions, we can now create multi-cloud applications."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to ",(0,o.kt)("inlineCode",{parentName:"li"},"Applications")," > ",(0,o.kt)("inlineCode",{parentName:"li"},"local")," environment > Click ",(0,o.kt)("inlineCode",{parentName:"li"},"New Resource"),"."),(0,o.kt)("li",{parentName:"ol"},'Enter the resource name, choose the resource type "demo-mysql" that we just created, input architecture, database version, and other configurations, then click ',(0,o.kt)("inlineCode",{parentName:"li"},"Save")," to deploy."),(0,o.kt)("li",{parentName:"ol"},"Go to the ",(0,o.kt)("inlineCode",{parentName:"li"},"production")," environment > Click ",(0,o.kt)("inlineCode",{parentName:"li"},"New Resource"),', select the resource type "demo-mysql" again, input configurations, and complete the deployment.'),(0,o.kt)("li",{parentName:"ol"},"Go to the ",(0,o.kt)("inlineCode",{parentName:"li"},"dr")," environment > Click ",(0,o.kt)("inlineCode",{parentName:"li"},"New Resource"),', select the resource type "demo-mysql" again, input configurations, and complete the deployment.'),(0,o.kt)("li",{parentName:"ol"},'All three environments have created resources of type "demo-mysql". The ',(0,o.kt)("inlineCode",{parentName:"li"},"local")," environment is connected to a Kubernetes connector, the ",(0,o.kt)("inlineCode",{parentName:"li"},"production")," environment is connected to an Alibaba connector, and the ",(0,o.kt)("inlineCode",{parentName:"li"},"dr")," environment is connected to an AWS connector. You can see that different environments dynamically create corresponding resources based on the current environment.")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"local")," environment creates a MySQL container in the Kubernetes cluster."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resource-local-mysql",src:n(66491).Z,width:"2082",height:"1230"})),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"production")," environment creates an RDS service in Alibaba Cloud."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resource-production-mysql",src:n(5889).Z,width:"2076",height:"1322"})),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"dr")," environment creates the corresponding RDS service in AWS Cloud."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resource-dr-mysql",src:n(59911).Z,width:"2068",height:"1480"})),(0,o.kt)("h3",{id:"deploy-multi-cloud-applications-via-walrus-file"},"Deploy Multi-Cloud Applications via Walrus File"),(0,o.kt)("p",null,"In addition to deploy multi-cloud applications via UI, you can achieve the same effect using a Walrus file."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Prepare the app.yaml with the following content:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: v1\nresources:\n  - name: mysql\n    type: mysql\n    attributes:\n      architecture: standalone\n      database: mydb\n      engine_version: "8.0"\n      username: rdsuser\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Run the command to deploy to different environments.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Deploy to the local environment\nwalrus apply -f app.yaml -p default -e local\n\n# Deploy to the production environment\nwalrus apply -f app.yaml -p default -e production\n\n# Deploy to the dr environment\nwalrus apply -f app.yaml -p default -e dr\n")),(0,o.kt)("p",null,"Deploying via CLI allows you to reuse the same Walrus file to deploy multi-cloud applications to different environments."),(0,o.kt)("p",null,"With this, we have completed configuring resource definitions to simplify application deployment and deploying multi-cloud applications."))}p.isMDXComponent=!0},4413:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/environment-list-7dfc368ac4fde25c521082c7bffa2208.png"},85570:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resource-definition-rule1-4031af97c29806370658e88caa648cc2.png"},20170:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resource-definition-rule2-c179728ff931dc257adf475ddae8d9ae.png"},1338:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resource-definition-rule3-9595edecaaad51d92174096b58543e7b.png"},33370:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resource-definition-ui-schema-edit-7be03cc00e97bc7b1f2e4649e450dd12.png"},9447:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resource-definition-ui-schema-preview-35142fc0e35fbae29412bfe5678c451d.png"},59911:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resource-dr-mysql-24bfeff6e64eba5cfc1c2b6bb6b4e827.png"},66491:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resource-local-mysql-39aad26552ea1d5b753d7e59f30ba5a1.png"},5889:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resource-production-mysql-019021065573e0b356a0bfa671d81c69.png"}}]);