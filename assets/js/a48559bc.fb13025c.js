"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[61123],{69007:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>u,contentTitle:()=>r,default:()=>c,frontMatter:()=>n,metadata:()=>s,toc:()=>w});var l=t(87462),i=(t(67294),t(3905));const n={},r="walrus workflowexecution list",s={unversionedId:"cli/workflowexecution/walrus_workflowexecution_list",id:"version-v0.5/cli/workflowexecution/walrus_workflowexecution_list",title:"walrus workflowexecution list",description:"Get workflow executions.",source:"@site/versioned_docs/version-v0.5/cli/workflowexecution/walrus_workflowexecution_list.md",sourceDirName:"cli/workflowexecution",slug:"/cli/workflowexecution/walrus_workflowexecution_list",permalink:"/docs/v0.5/cli/workflowexecution/walrus_workflowexecution_list",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/versioned_docs/version-v0.5/cli/workflowexecution/walrus_workflowexecution_list.md",tags:[],version:"v0.5",frontMatter:{},sidebar:"cli",previous:{title:"walrus workflowexecution get",permalink:"/docs/v0.5/cli/workflowexecution/walrus_workflowexecution_get"},next:{title:"walrus workflowexecution rerun-request",permalink:"/docs/v0.5/cli/workflowexecution/walrus_workflowexecution_rerun-request"}},u={},w=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],a={toc:w};function c(e){let{components:o,...t}=e;return(0,i.kt)("wrapper",(0,l.Z)({},a,t,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"walrus-workflowexecution-list"},"walrus workflowexecution list"),(0,i.kt)("p",null,"Get workflow executions."),(0,i.kt)("h2",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Get workflow executions that belongs to a project."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"walrus workflowexecution list <workflow> [flags]\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'      --extract strings   \n      --id string         \n  -o, --output string     Output format [table, json, yaml] (default "table")\n      --page int           (default 1)\n      --per-page int       (default 100)\n      --query string      \n      --sort strings      \n')),(0,i.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -d, --debug   Enable debug log\n  -h, --help    Help for this command\n")),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"walrus_workflowexecution"},"walrus workflowexecution"),"\t - Manage workflow executions")))}c.isMDXComponent=!0}}]);