"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[81652],{77261:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>v,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var o=t(87462),r=(t(67294),t(3905));const i={},l="walrus environment clone",s={unversionedId:"cli/environment/walrus_environment_clone",id:"version-v0.5/cli/environment/walrus_environment_clone",title:"walrus environment clone",description:"Clone for an environment.",source:"@site/versioned_docs/version-v0.5/cli/environment/walrus_environment_clone.md",sourceDirName:"cli/environment",slug:"/cli/environment/walrus_environment_clone",permalink:"/docs/zh/v0.5/cli/environment/walrus_environment_clone",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/versioned_docs/version-v0.5/cli/environment/walrus_environment_clone.md",tags:[],version:"v0.5",frontMatter:{},sidebar:"cli",previous:{title:"walrus environment",permalink:"/docs/zh/v0.5/cli/environment/walrus_environment"},next:{title:"walrus environment create",permalink:"/docs/zh/v0.5/cli/environment/walrus_environment_create"}},a={},m=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],c={toc:m};function v(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,o.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"walrus-environment-clone"},"walrus environment clone"),(0,r.kt)("p",null,"Clone for an environment."),(0,r.kt)("h2",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Clone for an environment of a project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"walrus environment clone <environment> [flags]\n")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'      --connectors jsonArray     (default []...)\n      --description string      \n      --draft                   \n      --labels stringToString    (default [])\n      --name string             \n  -o, --output string           Output format [table, json, yaml] (default "table")\n      --type string             \n      --variables jsonArray      (default []...)\n')),(0,r.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -d, --debug   Enable debug log\n  -h, --help    Help for this command\n")),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"walrus_environment"},"walrus environment"),"\t - Manage environments")))}v.isMDXComponent=!0}}]);